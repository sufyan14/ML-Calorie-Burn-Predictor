# -*- coding: utf-8 -*-
"""ML Project 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1elYAO06x_iI19yiUVQs0diufnU5RvKbD

# **Machine Learning Project** (Calorie Burn Predictor using ***Linear Regression***)

### By ***Muhammad Sufyan***

## **Import Libraries**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

"""## **Loading Data**"""

df = pd.read_csv('/content/gym_members_exercise_tracking.csv')

df.head(5)

"""## **Data Preprocessing**

### **Define Features(X) and Target(Y)**
"""

X = df.drop(columns=['Calories_Burned'])  # Features except the Y value
y = df['Calories_Burned'] # Output Variable

"""### **Converting Categorical Data to Numeric** using **One-Hot Coding**"""

X = pd.get_dummies(X, columns=['Gender', 'Workout_Type', 'Experience_Level'], drop_first=True)

"""### **Data Splitting into Train and Test**"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""## **Training the Model**"""

model = LinearRegression()
model.fit(X_train, y_train)

"""## **Making Prediction**"""

y_pred = model.predict(X_test)

"""## **Evaluating Model Performance**"""

mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, y_pred)

print(f'Root Mean Squared Error (RMSE): {rmse:.2f}')
print(f'RÂ² Score: {r2:.2f}')

"""## **Data Visualization**"""

plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_pred, alpha=0.6, color='blue', edgecolors='k')
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'r--')  # ideal line
plt.xlabel("Actual Calories Burned")
plt.ylabel("Predicted Calories Burned")
plt.title("Actual vs Predicted Calories Burned")
plt.grid(True)
plt.tight_layout()
plt.show()